@model WebApplication4.Models.LoginInfo
@{
    Layout = null;
    if (Session["LoginID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Password Change</title>
    <style>
        body {
            font-family: "Lato", sans-serif;
        }

        /* Fixed sidenav, full height */
        .sidenav {
            height: 100%;
            width: 300px;
            position: fixed;
            z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            padding-top: 20px;
        }

            /* Style the sidenav links and the dropdown button */
            .sidenav a, .dropdown-btn {
                padding: 6px 8px 6px 16px;
                text-decoration: none;
                font-size: 20px;
                color: #818181;
                display: block;
                border: none;
                background: none;
                width: 100%;
                text-align: left;
                cursor: pointer;
                outline: none;
            }

                /* On mouse-over */
                .sidenav a:hover, .dropdown-btn:hover {
                    color: #f1f1f1;
                }

        /* Main content */
        .main {
            margin-left: 300px; /* Same as the width of the sidenav */
            font-size: 20px; /* Increased text to enable scrolling */
            padding: 0px 10px;
        }

        /* Add an active class to the active dropdown button */
        .active {
            background-color: green;
            color: white;
        }

        /* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */
        .dropdown-container {
            display: none;
            background-color: #262626;
            padding-left: 8px;
        }

        /* Optional: Style the caret down icon */
        .fa-caret-down {
            float: right;
            padding-right: 8px;
        }
    </style>
</head>
<body>
    <div class="sidenav">
        <a href="@Url.Action("ReturnHome", "Home")">Home</a>
        <button class="dropdown-btn">
            System Setup
            <i class="fa fa-caret-down"></i>
        </button>
        <div class="dropdown-container">
            <a href="@Url.Action("UserMaintain", "SystemSetup")">User Maintenance</a>
            <a href="@Url.Action("RoleMaintain", "SystemSetup")">Role Maintenance</a>
            <a href="@Url.Action("MenuMaintain", "SystemSetup")">Menu Maintenance</a>
        </div>

        <button class="dropdown-btn">
            System Operation
            <i class="fa fa-caret-down"></i>
        </button>
        <div class="dropdown-container">
            <a href="#">Link 1</a>
            <a href="#">Link 2</a>
            <a href="#">Link 3</a>
        </div>

        <button class="dropdown-btn">
            Profile
            <i class="fa fa-caret-down"></i>
        </button>
        <div class="dropdown-container">
            <a href="@Url.Action("ChangePassword", "Home")">Change Password</a>
            <a href="@Url.Action("LogOut", "Home")"> LogOut</a>
        </div>
    </div>

    <div class="main">
        <h2>Modify Password</h2>
        @using (Html.BeginForm("ModifyPassword", "Home", FormMethod.Post))
        {
            <table>
                <tr>
                    <td>@Html.LabelFor(model => model.LoginName)</td>
                    <td>@Session["LoginName"]</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.LoginPassword)</td>
                    <td>@Html.EditorFor(model => model.LoginPassword)</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(model => model.LoginPassword)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.NewPassword1)</td>
                    <td>@Html.EditorFor(model => model.NewPassword1)</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(model => model.NewPassword1)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.NewPassword2)</td>
                    <td>@Html.EditorFor(model => model.NewPassword2)</td>

                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(model => model.NewPassword2)</td>
                </tr>
                <tr>
                    <td colspan="2">
                        <label class=" field-validation-error">
                            @Html.DisplayFor(model => model.ModifyMessage)
                        </label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" name="name" value="Save" />
                        <input type="button" value="Back" onclick="history.back()">
                    </td>
                </tr>
            </table>
        }
    </div>

    <script>
        /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
        var dropdown = document.getElementsByClassName("dropdown-btn");
        var i;

        for (i = 0; i < dropdown.length; i++) {
            dropdown[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var dropdownContent = this.nextElementSibling;
                if (dropdownContent.style.display === "block") {
                    dropdownContent.style.display = "none";
                } else {
                    dropdownContent.style.display = "block";
                }
            });
        }
    </script>
</body>
</html>
